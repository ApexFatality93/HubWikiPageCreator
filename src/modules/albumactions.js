const albumElements={output:{albumCiv:"albumCiv",album:"album",albumType:"albumType",albumHeaderName:"albumHeaderName",albumImage:"albumImage",albumName:"albumName",albumOther:"albumOther",albumGlyphs:"albumGlyphs",albumDiscoverer:"albumDiscoverer",albumText:"albumText",albumDesc:"albumDesc"}};let albumInitialised=!1;function albumLink(e){e.style.pointerEvents="none";const t="function"==typeof albumLinkGen?albumLinkGen():pageData.catalogue?pageData.catalogue:(console.warn("No wiki page provided. Add the function `albumLinkGen()` to your code or define a catalog in the `pageData.catalogue` property!"),void(e.style.pointerEvents=""));t&&assignLink(e,wikiLink+t)}function albumItemType(){const e="function"==typeof albumItemTypeExternal?albumItemTypeExternal():pageData.type;globalElements.output.album.innerText=e}function albumDesc(){const e="function"==typeof albumDescExternal?albumDescExternal():"";globalElements.output.albumDesc.innerText=e}function albumDiscoverer(){const e=(()=>{if("function"==typeof albumDiscovererExternal)return albumDiscovererExternal();{const{discovered:e,discoveredlink:t}=pageData;return t?`wiki=${t}`:`discoverer=${e}`}})();globalElements.output.albumDiscoverer.innerText=e}function albumCiv(){const e="function"==typeof albumCivExternal?albumCivExternal():pageData.civShort;globalElements.output.albumCiv.innerText=e}function albumName(){const e="function"==typeof albumNameExternal?albumNameExternal():pageData.name;globalElements.output.albumName.innerText=e}function albumOther(){const e="function"==typeof albumOtherExternal?albumOtherExternal():"";globalElements.output.albumOther.innerText=e}function albumType(){const e="function"==typeof albumTypeExternal?albumTypeExternal():"";globalElements.output.albumType.innerText=e}function updateAlbumData(){const e={albumHeaderName:"name",albumImage:"image",albumGlyphs:"portalglyphs"};for(const t in e){globalElements.output[t].innerText=pageData[e[t]]}}function albumFunctions(){function e(){updateAlbumData(),albumCiv(),albumDiscoverer(),albumName(),albumOther(),albumType(),albumItemType(),albumDesc()}albumInitialised?e():document.addEventListener("albumLoaded",(()=>e()))}(async()=>{const e=await loadHTML("src/htmlSnippets/album.html");globalElements.output.albumEntry&&(globalElements.output.albumEntry.innerHTML=e.body.innerHTML),globalElements.output.albumActions&&(globalElements.output.albumActions.innerHTML='<button id="albumBtn" class="button is-outlined is-primary"\n\t\tdata-link="album" onclick="copyCode(this, \'albumText\')">\n\t\tCopy Album Wikicode\n\t\t</button>\n\t\t<a class="button is-outlined is-primary" id="albumLink"\n\t\tdata-link="album" onclick="albumLink(this)">\n\t\tOpen Album\n\t\t</a>'),updateGlobalElements(albumElements);assignElementFunctions({civ:["albumCiv()",null,!0]}),document.dispatchEvent(new Event("albumLoaded")),albumInitialised=!0;globalElements.output.albumActions.insertAdjacentHTML("afterbegin",'<p style="width:100%" class="has-text-centered mb-3">Please don\'t forget to create an album entry!</p>')})();
