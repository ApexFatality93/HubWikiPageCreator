const albumElements={output:{albumCiv:"albumCiv",album:"album",albumType:"albumType",albumHeaderName:"albumHeaderName",albumImage:"albumImage",albumName:"albumName",albumOther:"albumOther",albumGlyphs:"albumGlyphs",albumDiscoverer:"albumDiscoverer",albumText:"albumText",albumDesc:"albumDesc"}};function albumLink(t){t.style.pointerEvents="none";const e="function"==typeof albumLinkGen?albumLinkGen():pageData.catalogue?pageData.catalogue:(console.warn("No wiki page provided. Add the function `albumLinkGen()` to your code or define a catalog in the `pageData.catalogue` property!"),void(t.style.pointerEvents=""));e&&assignLink(t,wikiLink+e)}function albumItemType(){const t="function"==typeof albumItemTypeExternal?albumItemTypeExternal():pageData.type;globalElements.output.album.innerText=t}function albumDesc(){const t="function"==typeof albumDescExternal?albumDescExternal():"";globalElements.output.albumDesc.innerText=t}function albumDiscoverer(){const t=(()=>{if("function"==typeof albumDiscovererExternal)return albumDiscovererExternal();{const t=pageData.discovered,e=pageData.discoveredlink;return e?`wiki=${e}`:`discoverer=${t}`}})();globalElements.output.albumDiscoverer.innerText=t}function albumCiv(){const t="function"==typeof albumCivExternal?albumCivExternal():pageData.civShort;globalElements.output.albumCiv.innerText=t}function albumName(){const t="function"==typeof albumNameExternal?albumNameExternal():pageData.name;globalElements.output.albumName.innerText=t}function albumOther(){const t="function"==typeof albumOtherExternal?albumOtherExternal():"";globalElements.output.albumOther.innerText=t}function albumType(){const t="function"==typeof albumTypeExternal?albumTypeExternal():"";globalElements.output.albumType.innerText=t}function albumFunctions(){albumCiv(),albumDiscoverer(),albumName(),albumOther(),albumType(),albumItemType(),albumDesc()}(()=>{globalElements.output.albumEntry&&(globalElements.output.albumEntry.innerHTML='<h3 class="title is-5 has-text-left has-text-weight-bold mb-2"><output id="albumCiv"></output>\n<output id="album" name="type"></output> <output id="albumType"></output> entry for <output id=\'albumHeaderName\' name="name"></output>:\n</h3>\n<div id="albumText" class="wikiText">\n| {{album| file=<output name="image" id="albumImage"></output> | name=[[<output id="albumName"></output>]]\n| other=<output id="albumOther"></output> | glyph=<output id=\'albumGlyphs\' name="portalglyphs"></output> |\n<output id="albumDiscoverer"></output>}} <output id="albumDesc"></output>\n</div>'),globalElements.output.albumActions&&(globalElements.output.albumActions.innerHTML='<button id="albumBtn" class="button is-outlined is-primary"\nonclick="copyCode(this, \'albumText\')">\nCopy album wikicode\n</button>\n<a class="button is-outlined is-primary" id="albumLink"\nonclick="albumLink(this)">\nOpen Album\n</a>'),updateGlobalElements(albumElements);assignElementFunctions({civ:["albumCiv()",null,!0]})})();
