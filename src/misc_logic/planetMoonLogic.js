function startupFunctions(){celestialStartupFunctions(),globalElements.input.resourceInputs.querySelector("button").onclick(),autoInfested(),wormAutoSpawn(),wormAlbumName(),"function"==typeof planetStartupFunctions&&planetStartupFunctions()}const planetMoonElements={input:{resourceInputs:"resourceInputs",autoSpawn:"autoSpawnInput"},output:{resourceBullets:"resourceBullets",creatures:"creatures",plants:"plants",minerals:"minerals",sandworm:"sandworm"}};updateGlobalElements(planetMoonElements);const planetMoonElementFunctions={civ:["wormAlbumName()",null,!0],systemInput:["locationSentence()"],faunaNumberInput:['numberStats(this); plural(pageData[this.dataset.destNoauto], "faunaSentencePlural")'],sentinelInput:["sentinelSentence()"],descriptionInput:["autoInfested(this)"],sandwormInput:["addSandwormTemplate()"],wormmaxdepthInput:["numberStats(this, 1)"],autoSpawn:["wormAutoSpawn()"]};function plural(t,e=null){const n=1==t?"is":"are";if(!e)return n;wikiCode(n,e)}function planetDescriptor(t){const e=t.dataset.destNoauto,n=buildDescriptor(t.value,pageData.pageType," "),o=globalElements.output[e];Array.isArray(o)?o.forEach((t=>t.innerText=n)):o.innerText=n}function locationSentence(){const{system:t,region:e,civShort:n}=pageData,o=`It can be found in the [[${t}]] [[star system]] in the [[${e}]] [[region]] (HUB${getHubNumber(e)}) of the ${HubGal(n)}.`;globalElements.output.location.innerText=o}function addResource(t=globalElements.input.resourceInputs.querySelector("button")){const e=t.parentElement,n=document.querySelectorAll("[data-resource]"),o=getChildIndex(n,"dataset.resource"),a="resource_input"+o,u=`<div class="tableCell text removable" data-resource="section${o}">\n\t\t<button class="button is-outlined is-danger icon is-small" title="Remove resource" type="button" disabled onclick="removeSpecificSection('section${o}', 'resource'); enableResourceAdd()">&#10006</button>\n\t\t<label for="${a}">Resource name:</label>\n\t</div>\n\t<div class="tableCell data" data-resource="section${o}">\n\t\t<input type="text" list="resources" id="${a}" oninput="resourceList()" onchange="forceDatalist(this)">\n\t</div>`;e.insertAdjacentHTML("beforebegin",u);const s=document.querySelectorAll("[data-resource] button"),r=s.length;for(;document.querySelectorAll("[data-resource] button").length<3;)addResource(t);if(r+1>6&&(t.disabled=!0),r>3)for(const t of s)t.disabled=!1}function enableResourceAdd(){globalElements.input.resourceInputs.querySelector("button").disabled=!1;const t=document.querySelectorAll("[data-resource] button");if(t.length<4)for(const e of t)e.disabled=!0;resourceList()}function resourceList(){const t=getResourceData(),e=document.querySelectorAll("[data-resource] input"),n=new Set;for(const t of e)t.value&&n.add(t.value);const o=new Object;for(const e of Array.from(n))o[e]=t[e];const a=Object.keys(o).map((t=>`* {{ilink|${t}}}`)),u=Object.values(o).map((t=>`[[${t}]]`));globalElements.output.resourceList.innerText=u.join(", "),globalElements.output.resourceBullets.innerText=a.join("\n")}function sentinelSentence(){const t=pageData.sentinel,e=getSentinelData(),n=(()=>{for(const n in e)if(e[n].includes(t))return n})(),o=`[[Sentinel]] activity on this ${pageData.pageType.toLowerCase()} is classified as: ''${t}''. The sentinels ${"aggressive"==n?"":"don't"} present an immediate threat.`;globalElements.output.sentinelSentence.innerText=o}async function addFauna(t){const e=t.parentElement,n=globalElements.output[t.dataset.destNoauto],o="fauna",a=document.querySelectorAll(`[data-${o}]`),u=getChildIndex(a,`dataset.${o}`),s=await loadHTML("src/htmlSnippets/creatureInputs.html",{i:u}),r=`<div data-fauna="section${u}">|-</div>\n\t<div data-fauna="section${u}">|[[File:<output id="faunaFile${u}"></output>|150px]] || <output id="faunaName${u}" name="faunaName${u}"></output> || <output id="faunaRarity${u}"></output> / <output id="faunaEcosystem${u}"></output> / <output id="faunaActivity${u}"> </output> <output id="faunaHemisphere${u}"></output> || <output id="faunaGenus${u}"></output> || <output id="faunaHeight${u}"></output>m || <output id="faunaWeight${u}"></output>kg || <output id="faunaDiscoverer${u}"></output></div>`;e.insertAdjacentHTML("beforebegin",s.body.innerHTML),n.insertAdjacentHTML("beforeend",r),postProcessSection(t,o,u),genusDropdown(globalElements.input[`faunaEcosystemInput${u}`])}async function addFlora(t){const e=t.parentElement,n=globalElements.output[t.dataset.destNoauto],o="flora",a=document.querySelectorAll(`[data-${o}]`),u=getChildIndex(a,`dataset.${o}`),s=await loadHTML("src/htmlSnippets/floraInputs.html",{i:u}),r=`<div data-flora="section${u}">|-</div>\n\t<div data-flora="section${u}">|[[File:<output id="floraFile${u}"></output>|150px]] || <output id="floraName${u}" name="floraName${u}"></output> || <output id="floraAge${u}"></output> || <output id="floraRoot${u}"></output> || <output id="floraNut${u}"></output> || <output id="floraNote${u}"></output> || <output id="floraElements${u}"></output> || <output id="floraDiscoverer${u}"></output></div>`;e.insertAdjacentHTML("beforebegin",s.body.innerHTML),n.insertAdjacentHTML("beforeend",r),postProcessSection(t,o,u)}async function addMineral(t){const e=t.parentElement,n=globalElements.output[t.dataset.destNoauto],o="mineral",a=document.querySelectorAll(`[data-${o}]`),u=getChildIndex(a,`dataset.${o}`),s=await loadHTML("src/htmlSnippets/mineralInputs.html",{i:u}),r=`<div data-mineral="section${u}">|-</div>\n\t<div data-mineral="section${u}">|[[File:<output id="mineralFile${u}"></output>|150px]] || <output id="mineralName${u}" name="mineralName${u}"></output> || <output id="mineralMetal${u}"></output> || <output id="mineralFormation${u}"></output> || <output id="mineralNote${u}"></output> || <output id="mineralElements${u}"></output> || <output id="mineralDiscoverer${u}"></output></div>`;e.insertAdjacentHTML("beforebegin",s.body.innerHTML),n.insertAdjacentHTML("beforeend",r),postProcessSection(t,o,u)}function postProcessSection(t,e,n){addAllTooltips(),changeTableEntry(t);const o={input:{},output:{}},a=`[data-${e}="section${n}"]`;initialiseSectionInputs(a);const u=document.querySelectorAll(`${a} :is(input, select)`);for(const t of u)o.input[t.id]=t.id;const s=document.querySelectorAll(`${a} output`);for(const t of s)t.id&&(o.output[t.id]=t.id);updateGlobalElements(o)}function changeTableEntry(t){const e=t.parentElement,n=e.dataset.section,o=document.querySelectorAll(`.tableHeader[data-${n}]`);for(let t=0;t<o.length;t++){const e="is-"+oddEven(t+1),a=o[t].dataset[n],u=document.querySelectorAll(`[data-${n}="${a}"]`);for(const t of u)t.classList.remove("is-odd","is-even"),t.classList.add(e)}function a(t){if(!t)return;const o=e.dataset[n],a=extractNumber(o),u=Object.keys(t).find((t=>extractNumber(t)==a));delete t[u]}e.dataset[n]&&("fauna"==n?(a(links.genera),addGenus()):(a(links.resources?.[n]),floraMineralResourceLinks()))}function addGenus(t=null){const e=links.genera??=new Object;if(t){const n=t.value;e[t.dataset.destNoauto]=sanitiseString(n)}const n=new Set,o=sortObj(structuredClone(e),!0);for(const t in o){const e=o[t];e&&!n.has(e)&&(o[t]=`[[${e}]]`,n.add(e))}for(const t in o){const e=o[t];globalElements.output[t].innerText=e}}function floraMineralResourceLinks(t=null){const e=links.resources??=new Object;if(t){const n=t.value,o=t.dataset.destNoauto,a=t.id,u=t.parentElement.dataset.section.split(" ")[0],s=u.replace(extractNumber(u),"");e[s]??=new Object,e[s][o]??=new Object,e[s][o][a]=sanitiseString(n)}const n=new Set,o=sortObj(structuredClone(e));for(const t in sortObj(o)){const e=o[t];for(const t in sortObj(e)){const o=e[t];for(const t in o){const e=o[t];e&&!n.has(e)&&(o[t]=`[[${e}]]`,n.add(e))}}}for(const t in o)for(const e in o[t]){const n=Object.values(o[t][e]).filter((t=>t)).join(", ");globalElements.output[e].innerText=n}}function genusDropdown(t){const e=getCreatureData(),n=t.value,o=Object.keys(e.ecosystems[n]),a="faunaGenusInput"+extractNumber(t.id),u=new Array;for(const t of o)u.push(`${t} (${e.ecosystems[n][t].commonName})`);setDropdownOptions(globalElements.input[a],o,u),addGenus(globalElements.input[a])}function autoWorm(t){t&&(globalElements.input.sandwormInput.checked=!0),addSandwormTemplate()}function addSandwormTemplate(){const t=globalElements.input.sandwormInput,e=t.dataset.destNoauto,n=Array.from(document.querySelectorAll(`[data-section="${e}"]`)),o=globalElements.output[e];n.push(o);for(const e of n)t.checked?e.style.display="":e.style.display="none"}function wormAutoSpawn(){const t=(()=>{const t=globalElements.input.autoSpawn;for(const e of t)if(e.checked)return e.value})();globalElements.output.wormAutoSpawn.innerText=t}function wormAlbumName(){const t=pageData.civShort,e=(()=>{switch(t){case"GHub":return"GHEC Sandworm Album";case"CalHub":return"CalHub Rare Fauna Album#Sandworm|CalHub Rare Fauna Album";case"EisHub":return"EisHub Shaihuluda Album"}})();globalElements.output.wormAlbumName.innerText=e}function resetExternal(){const t=document.querySelectorAll("[data-moon], [data-resource], [data-fauna], [data-flora], [data-mineral]");removeSection(t),enableResourceAdd(),"function"==typeof enableMoonAdd&&enableMoonAdd()}assignElementFunctions(planetMoonElementFunctions),(()=>{const t=["creatureInputs","floraInputs","mineralInputs"];for(const e of t)cachedHTML.files.add(`src/htmlSnippets/${e}.html`)})();
