function startupFunctions(){const e=document.querySelector('[oninput*="enPrefix"]');enPrefix(e.value,"enPrefix"),addStars(requiredInputIDs)}const businessElements={input:{contentsInput:"contentsInput"},output:{contents:"contents"}};updateGlobalElements(businessElements);const businessElementFunctions={ownerInput:['hideDiscoverer("ownerInput", "ownerlinkInput")'],ownerlinkInput:['hideDiscoverer("ownerlinkInput", "ownerInput")'],currencyInput:['fixHC(this); enPrefix(this.value, "enPrefix")']};function fixHC(e){const t=pageData.currency.toLowerCase(),n=e.dataset.dest;"hubcoin"===t&&wikiCode("{{CurrencyHubCoin}}",n)}async function addSection(){const{input:{contentsInput:e},output:{contents:t}}=globalElements,n=document.querySelectorAll("[data-section]"),i=getChildIndex(n,"dataset.section"),u={childIndex:i,heading:"heading"+i,img:"img"+i,text:"text"+i,heading_input:"heading_input"+i,img_input:"img_input"+i,img_upload:"img_upload"+i,text_input:"text_input"+i},s=await loadHTML("src/htmlSnippets/businessInputs.html",u),o=`\n\t\t<div data-section="section${i}">==<output name="${u.heading}"></output>==</div>\n\t\t<div style="display:none" data-section="section${i}">[[File:<output id="${u.img}"></output>|thumb]]</div>\n\t\t<div data-section="section${i}"><output id="${u.text}"></output><br><br></div>`,r=s.querySelectorAll(`[data-section="section${strings.childIndex}"] :is(input, textarea)`);for(const e of r)assignFunction(e,"wikiCode(this)");e.insertAdjacentHTML("beforebegin",s.body.innerHTML),t.insertAdjacentHTML("beforeend",o)}function showContentImg(e){const t=e.dataset.dest,n=document.getElementById(t).parentElement;e.value?n.style.display="":n.style.display="none"}function resetExternal(){const e=document.querySelectorAll("[data-section]");globalElements.output.contents.innerText="",removeSection(e)}assignElementFunctions(businessElementFunctions),datalists({currencies:["{{CurrencyHubCoin}}"]}),cachedHTML.files.add("src/htmlSnippets/businessInputs.html");const generalRequiredInputIDs=["systemInput","planetInput","headquartersInput","fileInput","portalglyphsInput","nameInput"],requiredInputIDs=["ownerInput","ownerlinkInput",...generalRequiredInputIDs];function requiredInputs(){for(const e of generalRequiredInputIDs){const t=globalElements.input[e];if(t.style.backgroundColor="",!t.value||t?.closest(".tableCell, .tableHeader")?.querySelector(".error"))return requiredError(e)}return!(!globalElements.input.ownerInput.value&&!globalElements.input.ownerlinkInput.value)||requiredError("owner")}
